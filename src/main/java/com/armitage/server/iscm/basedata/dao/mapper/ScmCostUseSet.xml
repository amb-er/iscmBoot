<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scmcostuseset">
 
	<!-- default parameterType="HashMap" -->
	<select id="scmcostuseset.findAll" resultType="ScmCostUseSet2" >
	    SELECT * FROM ScmCostUseSet WHERE  1=1  
	</select>
 
	<select id="scmcostuseset.findAllPage" resultType="ScmCostUseSet2" parameterType="Map"> 
		SELECT ScmCostUseSet.*,ScmMaterialGroup.className AS saterialClassName,ScmCostUseType.name AS scmCostUseTypeName,
		ScmCostUseType.code AS scmCostUseTypeCode
		FROM ScmCostUseSet 
		LEFT JOIN ScmMaterialGroup ON scmcostuseset.classId=ScmMaterialGroup.id
		LEFT JOIN ScmCostUseType ON scmcostuseset.costUseTypeId=ScmCostUseType.id
		WHERE 1=1 ORDER BY id ASC   
	</select> 
	<select id="scmcostuseset.selectById" resultType="ScmCostUseSet2" parameterType="Long">
		SELECT * FROM ScmCostUseSet WHERE id = #{value}
	</select>
	
	<select id="scmcostuseset.selectByRowMD" resultType="ScmCostUseSet2" parameterType="String">
		SELECT ScmCostUseSet.*,scmmaterialgroup.className as saterialClassName FROM ScmCostUseSet 
			LEFT JOIN ScmMaterialGroup ON ScmMaterialGroup.id = ScmCostUseSet.classId
		WHERE rowMD = #{md}
	</select>  
	<insert id="scmcostuseset.add" parameterType="ScmCostUseSet"  keyProperty="id" useGeneratedKeys="true"> 
		INSERT INTO  ScmCostUseSet (
		orgUnitNo,
        costUseTypeId,
        classId,
        costOrgUnitNo,
        flag,
        creator,
        createDate,
        editor,
        editDate,
        controlUnitNo,
        rowMD        )
		VALUES (
		#{orgUnitNo},
        #{costUseTypeId},
        #{classId},
        #{costOrgUnitNo},
        #{flag},
        #{creator},
        #{createDate},
        #{editor},
        #{editDate},
        #{controlUnitNo},
        #{rowMD}        )
        ON DUPLICATE KEY UPDATE costUseTypeId=#{costUseTypeId},classId=#{classId}
	</insert>
 
	<update id="scmcostuseset.update" parameterType="ScmCostUseSet">
		UPDATE ScmCostUseSet set
		orgUnitNo=#{orgUnitNo},
        costUseTypeId=#{costUseTypeId},
        classId=#{classId},
        costOrgUnitNo=#{costOrgUnitNo},
        flag=#{flag},
        creator=#{creator},
        createDate=#{createDate},
        editor=#{editor},
        editDate=#{editDate},
        controlUnitNo=#{controlUnitNo}
        rowMD=#{rowMD}		 WHERE id = #{id}
	</update>
 
	<delete id="scmcostuseset.delete" parameterType="String">
		DELETE FROM ScmCostUseSet WHERE id IN (${value})
	</delete> 
	
	<select id="scmcostuseset.getScmCostUseSetByItemId" resultType="ScmCostUseSet2" parameterType="Map"> 
		SELECT ScmCostUseSet.*,ScmMaterialGroup.className AS
		'saterialClassName',ScmCostUseType.name AS 'scmCostUseTypeName',
		ScmCostUseType.code AS 'scmCostUseTypeCode',ScmMaterialGroupDetail.itemid
		FROM ScmCostUseSet
		LEFT JOIN ScmMaterialGroup ON scmcostuseset.classId=ScmMaterialGroup.id
		LEFT JOIN ScmCostUseType ON scmcostuseset.costUseTypeId=ScmCostUseType.id
		LEFT JOIN ScmMaterialGroupDetail on ScmCostUseSet.classId=ScmMaterialGroupDetail.classId
		WHERE ScmMaterialGroupDetail.itemId in (${itemIds})
		and ScmCostUseSet.costOrgUnitNo= #{costOrgUnitNo}
		and ScmCostUseType.controlUnitNo=#{controlUnitNo}
		ORDER BY id ASC
	</select>

	<select id="scmcostuseset.getScmCostUseSetByCost" resultType="ScmCostUseSet2" parameterType="Map"> 
		SELECT ScmCostUseSet.*,ScmMaterialGroup.className AS 'saterialClassName',ScmCostUseType.name AS 'scmCostUseTypeName',
		ScmCostUseType.code AS 'scmCostUseTypeCode'
		FROM ScmCostUseSet 
		LEFT JOIN ScmMaterialGroup ON scmcostuseset.classId=ScmMaterialGroup.id
		LEFT JOIN ScmCostUseType ON scmcostuseset.costUseTypeId=ScmCostUseType.id
		WHERE scmcostuseset.classId in (${classId})
			 and ScmCostUseSet.costOrgUnitNo= #{useOrgUnitNo}
			 and ScmCostUseType.controlUnitNo=#{controlUnitNo}
	 		<if test="costUseTypeId !=null and costUseTypeId !=''">
				And ScmCostUseType.costUseTypeId=#{costUseTypeId}
			</if>
		ORDER BY id ASC   
	</select>
</mapper>