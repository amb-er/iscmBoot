<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scmcookcostcardprice">
 
	<!-- default parameterType="HashMap" -->
	<select id="scmcookcostcardprice.findAll" resultType="ScmCookCostCardPrice" >
	    SELECT * FROM ScmCookCostCardPrice WHERE  1=1  
	</select>
 
	<select id="scmcookcostcardprice.findAllPage" resultType="ScmCookCostCardPrice" parameterType="Map"> 
		SELECT * FROM ScmCookCostCardPrice WHERE  1=1 ORDER BY id ASC 
	</select> 
	<select id="scmcookcostcardprice.selectById" resultType="ScmCookCostCardPrice" parameterType="Long">
		SELECT * FROM ScmCookCostCardPrice WHERE id = #{value}
	</select> 
	<select id="scmcookcostcardprice.selectCurrPriceByCookId" resultType="ScmCookCostCardPrice" parameterType="Map">
		SELECT * FROM ScmCookCostCardPrice WHERE orgUnitNo = #{orgUnitNo} and cookId=#{cookId} and accDate=#{accDate}
	</select>
	<select id="scmcookcostcardprice.selectByScmCookCostCardPrice" resultType="ScmCookCostCardPrice" parameterType="Map"> 
		SELECT * FROM ScmCookCostCardPrice 
		WHERE orgUnitNo = #{orgUnitNo}
		and cookId=#{cookId}
		and date_format(accDate,'%Y-%m-%d') = date_format(#{accDate},'%Y-%m-%d')
	</select> 
	<insert id="scmcookcostcardprice.batchAddSalePrice" parameterType="Map"  keyProperty="id" useGeneratedKeys="true"> 
		INSERT INTO  ScmCookCostCardPrice (
        orgUnitNo,
        cookId,
        accDate,
        salePrice,
        costPrice        )
		VALUES 
		<foreach item="scmCookCostCardPrice" index="index" collection="scmCookCostCardPriceList" separator=",">
			(
	        #{scmCookCostCardPrice.orgUnitNo},
	        #{scmCookCostCardPrice.cookId},
	        #{scmCookCostCardPrice.accDate},
	        #{scmCookCostCardPrice.salePrice},
	        #{scmCookCostCardPrice.costPrice}        )
     	</foreach >
     	ON DUPLICATE KEY UPDATE salePrice=VALUES(salePrice)
	</insert>
	<insert id="scmcookcostcardprice.batchAddCostPrice" parameterType="Map"  keyProperty="id" useGeneratedKeys="true"> 
		INSERT INTO  ScmCookCostCardPrice (orgUnitNo,cookId,accDate,salePrice,costPrice)
		SELECT #{orgUnitNo} as orgUnitNo,A.cookId,C.accDate,0 as salePrice,round(sum(A.qty*B.price),2) as costPrice
		From ScmCookCostCardDetailHistory A,ScmItemCostPriceHistory B,ScmDateList C
		WHERE A.itemId=B.itemId And (A.orgUnitNo=#{controlUnitNo} or A.orgUnitNo=#{orgUnitNo}) And A.beginDate &lt;= C.accDate And A.endDate &gt;=C.accDate
		And C.accDate &gt;=#{begDate} And C.accDate &lt;=#{endDate}
		And B.orgUnitNo=#{orgUnitNo} And B.accDate=C.accDate
		GROUP BY A.cookId,C.accDate
     	ON DUPLICATE KEY UPDATE costPrice=VALUES(costPrice)
	</insert>
	<insert id="scmcookcostcardprice.addPeriodSalePrice" parameterType="Map"  keyProperty="id" useGeneratedKeys="true"> 
		INSERT INTO  ScmCookCostCardPrice (orgUnitNo,cookId,accDate,salePrice,costPrice)
		SELECT A.orgUnitNo,A.cookId,B.accDate,A.salePrice,A.costPrice
		FROM ScmCookCostCardPrice A,ScmDateList B 
		WHERE A.orgUnitNo=#{orgUnitNo} and A.accDate=#{begDate} And B.accDate &gt;=#{begDate} and B.accDate &lt;=#{endDate}
     	ON DUPLICATE KEY UPDATE salePrice=VALUES(salePrice)
	</insert>
 	<insert id="scmcookcostcardprice.add" parameterType="ScmCookCostCardPrice"  keyProperty="id" useGeneratedKeys="true"> 
		INSERT INTO  ScmCookCostCardPrice (
        orgUnitNo,
        cookId,
        accDate,
        salePrice,
        costPrice        )
		VALUES (
        #{orgUnitNo},
        #{cookId},
        #{accDate},
        #{salePrice},
        #{costPrice}        )
	</insert>
	<update id="scmcookcostcardprice.update" parameterType="ScmCookCostCardPrice">
		UPDATE ScmCookCostCardPrice set
        orgUnitNo=#{orgUnitNo},
        cookId=#{cookId},
        accDate=#{accDate},
        salePrice=#{salePrice},
        costPrice=#{costPrice}		 WHERE id = #{id}
	</update>
	
	<delete id="scmcookcostcardprice.delete" parameterType="String">
		DELETE FROM ScmCookCostCardPrice WHERE id IN (${value})
	</delete> 

</mapper>
 
